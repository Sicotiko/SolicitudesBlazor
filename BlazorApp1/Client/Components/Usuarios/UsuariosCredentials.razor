@using BlazorApp1.Shared.User
@using BlazorApp1.Shared.ViewModel
@using BlazorApp1.Shared.Excepciones;

@inject Usuario usuarioManagement
@inject NavigationManager navigation
@inject ListadoTipoMovil listadoMovilesDisponibles
@inject MovilesService MovilesRepo
@inject NotificationService NotifyRepo

<RadzenCard>
    <RadzenText TextStyle="TextStyle.DisplayH5" Text="Ingresa tus Credenciales:" />
</RadzenCard>

<RadzenCard>
    <div class="input-group mb-3">
        <span class="input-group-text">Usuario: </span>
        <RadzenTextBox @bind-Value="usuarioManagement.UserInBase64" class="input-group-text" />
    </div>

    <div class="input-group mb-3">
        <span class="input-group-text">Pass: </span>
        <RadzenPassword @bind-Value="usuarioManagement.PaswordInBase64" class="input-group-text" Visible="visiblePass" />
        <RadzenTextBox @bind-Value="usuarioManagement.PaswordInBase64" class="input-group-text" Visible="!visiblePass" />
        @if (visiblePass)
        {
            <RadzenButton Icon="visibility" Click="btnVisibility" Style="margin-left:10px;" />
        }
        else
        {
            <RadzenButton Icon="visibility_off" Click="btnVisibility" Style="margin-left:10px;" />
        }
    </div>
    <RadzenButton Text="Guardar" Click="GuardarCredenciales" />
    <br />

    <RadzenLabel Text="* Las credenciales se guardaran durante toda la sesion." /><br />
    <RadzenLabel Text="* Solo basta con escribirlas." />

</RadzenCard>


@code {
    private bool visiblePass = true;

    private void btnVisibility()
    {
        visiblePass = !visiblePass;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        //if (!firstRender)
        //    listadoMovilesDisponibles.TipoMoviles = await MovilesRepo.GetMovilesDisponibles();

    }

    private async Task GuardarCredenciales()
    {
        try
        {
            listadoMovilesDisponibles.TipoMoviles = await MovilesRepo.GetMovilesDisponibles();
        }
        catch (ExceptionResponse exRes)
        {
            this.NotifyRepo.Notify(NotificationSeverity.Error,"Error!",exRes.Message);
        }

        navigation.NavigateTo("/");
    }
}
